name: Deploy binaries

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (snapshot/release)'
        required: true
        default: 'snapshot'

jobs:
  build:
    name: Build and Export
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Check Repository
        if: github.repository != 'KlemenDEV/MCreator'
        run: |
          cat << EOF
          ⚠️ Deploy action is only intended to be run from the official MCreator's repository. ⚠️
          We do not allow custom distributions of the software under MCreator brand to be distributed publicly.
          For more information, read LICENSE.txt.
          EOF
          exit 1
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11.0.11'
          distribution: 'adopt'
      - name: Install Dependencies
        run: |
          sudo apt-get install -y mkisofs nsis nsis-pluginapi
          wget https://nsis.sourceforge.io/mediawiki/images/d/d3/LockedList.zip
          sudo unzip LockedList.zip -d /usr/share/nsis/
      - name: Build and Export Release Using Gradle
        if: github.event.inputs.release-type == 'release'
        uses: Pylo/xvfb-action@v1
        with:
          run: ./gradlew exportRelease
      - name: Build and Export Snapshot Using Gradle
        if: github.event.inputs.release-type == 'snapshot'
        uses: Pylo/xvfb-action@v1
        with:
          run: ./gradlew exportSnapshot
      - name: Determine Release Version
        run: |
          VERSION=$(unzip -q -c build/libs/mcreator.jar META-INF/MANIFEST.MF | grep 'MCreator-Version' | cut -d ':' -f 2 | tr -d '[:space:]')
          DATE=$(unzip -q -c build/libs/mcreator.jar META-INF/MANIFEST.MF | grep 'Build-Date' | cut -d ':' -f 2 | tr -d '[:space:]')
          echo "MCR_VERSION=$VERSION.$DATE" >> $GITHUB_ENV
      - name: Virus Scan Binaries
        uses: Pylo/ghaction-virustotal@v2
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: build/export/*
      - name: Upload Binaries and Tag Release
        uses: Pylo/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.MCR_VERSION }}
          prerelease: github.event.inputs.release-type == 'snapshot'
          file_glob: true
          file: build/export/*
          body: > 
           **Download on https://mcreator.net/download**
           
           Changelog: https://mcreator.net/changelog
           
          overwrite: true
